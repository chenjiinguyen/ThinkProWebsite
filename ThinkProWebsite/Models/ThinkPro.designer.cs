#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThinkProWebsite.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="THINKPRO")]
	public partial class ThinkProDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVAITRO(VAITRO instance);
    partial void UpdateVAITRO(VAITRO instance);
    partial void DeleteVAITRO(VAITRO instance);
    partial void InsertCHITIETHD(CHITIETHD instance);
    partial void UpdateCHITIETHD(CHITIETHD instance);
    partial void DeleteCHITIETHD(CHITIETHD instance);
    partial void InsertCUNGUNG(CUNGUNG instance);
    partial void UpdateCUNGUNG(CUNGUNG instance);
    partial void DeleteCUNGUNG(CUNGUNG instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertLOAI(LOAI instance);
    partial void UpdateLOAI(LOAI instance);
    partial void DeleteLOAI(LOAI instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTHONGTIN(THONGTIN instance);
    partial void UpdateTHONGTIN(THONGTIN instance);
    partial void DeleteTHONGTIN(THONGTIN instance);
    partial void InsertTHUONGHIEU(THUONGHIEU instance);
    partial void UpdateTHUONGHIEU(THUONGHIEU instance);
    partial void DeleteTHUONGHIEU(THUONGHIEU instance);
    partial void InsertTINHTRANG(TINHTRANG instance);
    partial void UpdateTINHTRANG(TINHTRANG instance);
    partial void DeleteTINHTRANG(TINHTRANG instance);
    partial void InsertDANHGIA(DANHGIA instance);
    partial void UpdateDANHGIA(DANHGIA instance);
    partial void DeleteDANHGIA(DANHGIA instance);
    #endregion
		
		public ThinkProDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["THINKPROConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ThinkProDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThinkProDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThinkProDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThinkProDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VAITRO> VAITROs
		{
			get
			{
				return this.GetTable<VAITRO>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this.GetTable<CHITIETHD>();
			}
		}
		
		public System.Data.Linq.Table<CUNGUNG> CUNGUNGs
		{
			get
			{
				return this.GetTable<CUNGUNG>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<LOAI> LOAIs
		{
			get
			{
				return this.GetTable<LOAI>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<THONGTIN> THONGTINs
		{
			get
			{
				return this.GetTable<THONGTIN>();
			}
		}
		
		public System.Data.Linq.Table<THUONGHIEU> THUONGHIEUs
		{
			get
			{
				return this.GetTable<THUONGHIEU>();
			}
		}
		
		public System.Data.Linq.Table<TINHTRANG> TINHTRANGs
		{
			get
			{
				return this.GetTable<TINHTRANG>();
			}
		}
		
		public System.Data.Linq.Table<DANHGIA> DANHGIAs
		{
			get
			{
				return this.GetTable<DANHGIA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VAITRO")]
	public partial class VAITRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_VAITRO;
		
		private string _TENVAITRO;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_VAITROChanging(string value);
    partial void OnID_VAITROChanged();
    partial void OnTENVAITROChanging(string value);
    partial void OnTENVAITROChanged();
    #endregion
		
		public VAITRO()
		{
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_VAITRO", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_VAITRO
		{
			get
			{
				return this._ID_VAITRO;
			}
			set
			{
				if ((this._ID_VAITRO != value))
				{
					this.OnID_VAITROChanging(value);
					this.SendPropertyChanging();
					this._ID_VAITRO = value;
					this.SendPropertyChanged("ID_VAITRO");
					this.OnID_VAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENVAITRO", DbType="NVarChar(20)")]
		public string TENVAITRO
		{
			get
			{
				return this._TENVAITRO;
			}
			set
			{
				if ((this._TENVAITRO != value))
				{
					this.OnTENVAITROChanging(value);
					this.SendPropertyChanging();
					this._TENVAITRO = value;
					this.SendPropertyChanged("TENVAITRO");
					this.OnTENVAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VAITRO_NGUOIDUNG", Storage="_NGUOIDUNGs", ThisKey="ID_VAITRO", OtherKey="ID_VAITRO")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.VAITRO = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.VAITRO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHD")]
	public partial class CHITIETHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_HD;
		
		private string _ID_SP;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HDChanging(string value);
    partial void OnID_HDChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETHD()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HD
		{
			get
			{
				return this._ID_HD;
			}
			set
			{
				if ((this._ID_HD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HDChanging(value);
					this.SendPropertyChanging();
					this._ID_HD = value;
					this.SendPropertyChanged("ID_HD");
					this.OnID_HDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHD", Storage="_HOADON", ThisKey="ID_HD", OtherKey="ID_HD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._ID_HD = value.ID_HD;
					}
					else
					{
						this._ID_HD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHD", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUNGUNG")]
	public partial class CUNGUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NCC;
		
		private string _ID_SP;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NCCChanging(string value);
    partial void OnID_NCCChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    #endregion
		
		public CUNGUNG()
		{
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_CUNGUNG", Storage="_NHACUNGCAP", ThisKey="ID_NCC", OtherKey="ID_NCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.CUNGUNGs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.CUNGUNGs.Add(this);
						this._ID_NCC = value.ID_NCC;
					}
					else
					{
						this._ID_NCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CUNGUNG", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CUNGUNGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CUNGUNGs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_HD;
		
		private string _ID_USER;
		
		private System.Nullable<System.DateTime> _NGAYLAPHD;
		
		private System.Nullable<double> _THANHTOAN;
		
		private string _GHICHU;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HDChanging(string value);
    partial void OnID_HDChanged();
    partial void OnID_USERChanging(string value);
    partial void OnID_USERChanged();
    partial void OnNGAYLAPHDChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPHDChanged();
    partial void OnTHANHTOANChanging(System.Nullable<double> value);
    partial void OnTHANHTOANChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HD
		{
			get
			{
				return this._ID_HD;
			}
			set
			{
				if ((this._ID_HD != value))
				{
					this.OnID_HDChanging(value);
					this.SendPropertyChanging();
					this._ID_HD = value;
					this.SendPropertyChanged("ID_HD");
					this.OnID_HDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="VarChar(10)")]
		public string ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAPHD", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAPHD
		{
			get
			{
				return this._NGAYLAPHD;
			}
			set
			{
				if ((this._NGAYLAPHD != value))
				{
					this.OnNGAYLAPHDChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAPHD = value;
					this.SendPropertyChanged("NGAYLAPHD");
					this.OnNGAYLAPHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTOAN", DbType="Float")]
		public System.Nullable<double> THANHTOAN
		{
			get
			{
				return this._THANHTOAN;
			}
			set
			{
				if ((this._THANHTOAN != value))
				{
					this.OnTHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._THANHTOAN = value;
					this.SendPropertyChanged("THANHTOAN");
					this.OnTHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(100)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHD", Storage="_CHITIETHDs", ThisKey="ID_HD", OtherKey="ID_HD")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_HOADON", Storage="_NGUOIDUNG", ThisKey="ID_USER", OtherKey="ID_USER", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._ID_USER = value.ID_USER;
					}
					else
					{
						this._ID_USER = default(string);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI")]
	public partial class LOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LOAI;
		
		private string _TENLOAI;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAI()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(100)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_LOAI", OtherKey="ID_LOAI")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_USER;
		
		private string _ID_VAITRO;
		
		private string _HOTEN;
		
		private string _DIENTHOAI;
		
		private string _DIACHI;
		
		private string _EMAIL;
		
		private string _MATKHAU;
		
		private string _AVATAR;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<VAITRO> _VAITRO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USERChanging(string value);
    partial void OnID_USERChanged();
    partial void OnID_VAITROChanging(string value);
    partial void OnID_VAITROChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnDIENTHOAIChanging(string value);
    partial void OnDIENTHOAIChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnAVATARChanging(string value);
    partial void OnAVATARChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._VAITRO = default(EntityRef<VAITRO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_VAITRO", DbType="VarChar(10)")]
		public string ID_VAITRO
		{
			get
			{
				return this._ID_VAITRO;
			}
			set
			{
				if ((this._ID_VAITRO != value))
				{
					if (this._VAITRO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_VAITROChanging(value);
					this.SendPropertyChanging();
					this._ID_VAITRO = value;
					this.SendPropertyChanged("ID_VAITRO");
					this.OnID_VAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI", DbType="Char(11)")]
		public string DIENTHOAI
		{
			get
			{
				return this._DIENTHOAI;
			}
			set
			{
				if ((this._DIENTHOAI != value))
				{
					this.OnDIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI = value;
					this.SendPropertyChanged("DIENTHOAI");
					this.OnDIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(100)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVATAR", DbType="VarChar(30)")]
		public string AVATAR
		{
			get
			{
				return this._AVATAR;
			}
			set
			{
				if ((this._AVATAR != value))
				{
					this.OnAVATARChanging(value);
					this.SendPropertyChanging();
					this._AVATAR = value;
					this.SendPropertyChanged("AVATAR");
					this.OnAVATARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_HOADON", Storage="_HOADONs", ThisKey="ID_USER", OtherKey="ID_USER")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VAITRO_NGUOIDUNG", Storage="_VAITRO", ThisKey="ID_VAITRO", OtherKey="ID_VAITRO", IsForeignKey=true)]
		public VAITRO VAITRO
		{
			get
			{
				return this._VAITRO.Entity;
			}
			set
			{
				VAITRO previousValue = this._VAITRO.Entity;
				if (((previousValue != value) 
							|| (this._VAITRO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VAITRO.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._VAITRO.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._ID_VAITRO = value.ID_VAITRO;
					}
					else
					{
						this._ID_VAITRO = default(string);
					}
					this.SendPropertyChanged("VAITRO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NCC;
		
		private string _TENNCC;
		
		private EntitySet<CUNGUNG> _CUNGUNGs;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NCCChanging(string value);
    partial void OnID_NCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._CUNGUNGs = new EntitySet<CUNGUNG>(new Action<CUNGUNG>(this.attach_CUNGUNGs), new Action<CUNGUNG>(this.detach_CUNGUNGs));
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(100)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_CUNGUNG", Storage="_CUNGUNGs", ThisKey="ID_NCC", OtherKey="ID_NCC")]
		public EntitySet<CUNGUNG> CUNGUNGs
		{
			get
			{
				return this._CUNGUNGs;
			}
			set
			{
				this._CUNGUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_NCC", OtherKey="ID_NCC")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUNGUNGs(CUNGUNG entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_CUNGUNGs(CUNGUNG entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_SP;
		
		private string _ID_NCC;
		
		private string _ID_BRAND;
		
		private string _ID_LOAI;
		
		private string _TENSP;
		
		private string _ANH_SP;
		
		private System.Nullable<double> _GIATIEN;
		
		private string _DONVITINH;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _ID_TINHTRANG;
		
		private string _THOIHAN_BH;
		
		private string _THONGTIN;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntitySet<CUNGUNG> _CUNGUNGs;
		
		private EntityRef<THONGTIN> _THONGTIN1;
		
		private EntitySet<DANHGIA> _DANHGIAs;
		
		private EntityRef<LOAI> _LOAI;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<THUONGHIEU> _THUONGHIEU;
		
		private EntityRef<TINHTRANG> _TINHTRANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnID_NCCChanging(string value);
    partial void OnID_NCCChanged();
    partial void OnID_BRANDChanging(string value);
    partial void OnID_BRANDChanged();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnANH_SPChanging(string value);
    partial void OnANH_SPChanged();
    partial void OnGIATIENChanging(System.Nullable<double> value);
    partial void OnGIATIENChanged();
    partial void OnDONVITINHChanging(string value);
    partial void OnDONVITINHChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnID_TINHTRANGChanging(string value);
    partial void OnID_TINHTRANGChanged();
    partial void OnTHOIHAN_BHChanging(string value);
    partial void OnTHOIHAN_BHChanged();
    partial void OnTHONGTINChanging(string value);
    partial void OnTHONGTINChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._CUNGUNGs = new EntitySet<CUNGUNG>(new Action<CUNGUNG>(this.attach_CUNGUNGs), new Action<CUNGUNG>(this.detach_CUNGUNGs));
			this._THONGTIN1 = default(EntityRef<THONGTIN>);
			this._DANHGIAs = new EntitySet<DANHGIA>(new Action<DANHGIA>(this.attach_DANHGIAs), new Action<DANHGIA>(this.detach_DANHGIAs));
			this._LOAI = default(EntityRef<LOAI>);
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._THUONGHIEU = default(EntityRef<THUONGHIEU>);
			this._TINHTRANG = default(EntityRef<TINHTRANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="VarChar(10)")]
		public string ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BRAND", DbType="VarChar(10)")]
		public string ID_BRAND
		{
			get
			{
				return this._ID_BRAND;
			}
			set
			{
				if ((this._ID_BRAND != value))
				{
					if (this._THUONGHIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BRANDChanging(value);
					this.SendPropertyChanging();
					this._ID_BRAND = value;
					this.SendPropertyChanged("ID_BRAND");
					this.OnID_BRANDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="VarChar(10)")]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					if (this._LOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(50)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH_SP", DbType="VarChar(500)")]
		public string ANH_SP
		{
			get
			{
				return this._ANH_SP;
			}
			set
			{
				if ((this._ANH_SP != value))
				{
					this.OnANH_SPChanging(value);
					this.SendPropertyChanging();
					this._ANH_SP = value;
					this.SendPropertyChanged("ANH_SP");
					this.OnANH_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATIEN", DbType="Float")]
		public System.Nullable<double> GIATIEN
		{
			get
			{
				return this._GIATIEN;
			}
			set
			{
				if ((this._GIATIEN != value))
				{
					this.OnGIATIENChanging(value);
					this.SendPropertyChanging();
					this._GIATIEN = value;
					this.SendPropertyChanged("GIATIEN");
					this.OnGIATIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONVITINH", DbType="NVarChar(20)")]
		public string DONVITINH
		{
			get
			{
				return this._DONVITINH;
			}
			set
			{
				if ((this._DONVITINH != value))
				{
					this.OnDONVITINHChanging(value);
					this.SendPropertyChanging();
					this._DONVITINH = value;
					this.SendPropertyChanged("DONVITINH");
					this.OnDONVITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TINHTRANG", DbType="VarChar(10)")]
		public string ID_TINHTRANG
		{
			get
			{
				return this._ID_TINHTRANG;
			}
			set
			{
				if ((this._ID_TINHTRANG != value))
				{
					if (this._TINHTRANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._ID_TINHTRANG = value;
					this.SendPropertyChanged("ID_TINHTRANG");
					this.OnID_TINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIHAN_BH", DbType="NVarChar(20)")]
		public string THOIHAN_BH
		{
			get
			{
				return this._THOIHAN_BH;
			}
			set
			{
				if ((this._THOIHAN_BH != value))
				{
					this.OnTHOIHAN_BHChanging(value);
					this.SendPropertyChanging();
					this._THOIHAN_BH = value;
					this.SendPropertyChanged("THOIHAN_BH");
					this.OnTHOIHAN_BHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THONGTIN", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string THONGTIN
		{
			get
			{
				return this._THONGTIN;
			}
			set
			{
				if ((this._THONGTIN != value))
				{
					this.OnTHONGTINChanging(value);
					this.SendPropertyChanging();
					this._THONGTIN = value;
					this.SendPropertyChanged("THONGTIN");
					this.OnTHONGTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHD", Storage="_CHITIETHDs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CUNGUNG", Storage="_CUNGUNGs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CUNGUNG> CUNGUNGs
		{
			get
			{
				return this._CUNGUNGs;
			}
			set
			{
				this._CUNGUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_THONGTIN", Storage="_THONGTIN1", ThisKey="ID_SP", OtherKey="ID_SP", IsUnique=true, IsForeignKey=false)]
		public THONGTIN THONGTIN1
		{
			get
			{
				return this._THONGTIN1.Entity;
			}
			set
			{
				THONGTIN previousValue = this._THONGTIN1.Entity;
				if (((previousValue != value) 
							|| (this._THONGTIN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THONGTIN1.Entity = null;
						previousValue.SANPHAM = null;
					}
					this._THONGTIN1.Entity = value;
					if ((value != null))
					{
						value.SANPHAM = this;
					}
					this.SendPropertyChanged("THONGTIN1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DANHGIA", Storage="_DANHGIAs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<DANHGIA> DANHGIAs
		{
			get
			{
				return this._DANHGIAs;
			}
			set
			{
				this._DANHGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SANPHAM", Storage="_LOAI", ThisKey="ID_LOAI", OtherKey="ID_LOAI", IsForeignKey=true)]
		public LOAI LOAI
		{
			get
			{
				return this._LOAI.Entity;
			}
			set
			{
				LOAI previousValue = this._LOAI.Entity;
				if (((previousValue != value) 
							|| (this._LOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAI.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_LOAI = value.ID_LOAI;
					}
					else
					{
						this._ID_LOAI = default(string);
					}
					this.SendPropertyChanged("LOAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_SANPHAM", Storage="_NHACUNGCAP", ThisKey="ID_NCC", OtherKey="ID_NCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_NCC = value.ID_NCC;
					}
					else
					{
						this._ID_NCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_THUONGHIEU", ThisKey="ID_BRAND", OtherKey="ID_BRAND", IsForeignKey=true)]
		public THUONGHIEU THUONGHIEU
		{
			get
			{
				return this._THUONGHIEU.Entity;
			}
			set
			{
				THUONGHIEU previousValue = this._THUONGHIEU.Entity;
				if (((previousValue != value) 
							|| (this._THUONGHIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUONGHIEU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._THUONGHIEU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_BRAND = value.ID_BRAND;
					}
					else
					{
						this._ID_BRAND = default(string);
					}
					this.SendPropertyChanged("THUONGHIEU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTRANG_SANPHAM", Storage="_TINHTRANG", ThisKey="ID_TINHTRANG", OtherKey="ID_TINHTRANG", IsForeignKey=true)]
		public TINHTRANG TINHTRANG
		{
			get
			{
				return this._TINHTRANG.Entity;
			}
			set
			{
				TINHTRANG previousValue = this._TINHTRANG.Entity;
				if (((previousValue != value) 
							|| (this._TINHTRANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTRANG.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._TINHTRANG.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_TINHTRANG = value.ID_TINHTRANG;
					}
					else
					{
						this._ID_TINHTRANG = default(string);
					}
					this.SendPropertyChanged("TINHTRANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CUNGUNGs(CUNGUNG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CUNGUNGs(CUNGUNG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_DANHGIAs(DANHGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_DANHGIAs(DANHGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGTIN")]
	public partial class THONGTIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_SP;
		
		private string _VIXULY;
		
		private string _MANHINH;
		
		private string _RAM;
		
		private string _CARDDOHOA;
		
		private string _LUUTRU;
		
		private string _PIN;
		
		private string _KETNOI;
		
		private string _TRONGLUONG;
		
		private string _HEDIEUHANH;
		
		private string _MAUSAC;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnVIXULYChanging(string value);
    partial void OnVIXULYChanged();
    partial void OnMANHINHChanging(string value);
    partial void OnMANHINHChanged();
    partial void OnRAMChanging(string value);
    partial void OnRAMChanged();
    partial void OnCARDDOHOAChanging(string value);
    partial void OnCARDDOHOAChanged();
    partial void OnLUUTRUChanging(string value);
    partial void OnLUUTRUChanged();
    partial void OnPINChanging(string value);
    partial void OnPINChanged();
    partial void OnKETNOIChanging(string value);
    partial void OnKETNOIChanged();
    partial void OnTRONGLUONGChanging(string value);
    partial void OnTRONGLUONGChanged();
    partial void OnHEDIEUHANHChanging(string value);
    partial void OnHEDIEUHANHChanged();
    partial void OnMAUSACChanging(string value);
    partial void OnMAUSACChanged();
    #endregion
		
		public THONGTIN()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIXULY", DbType="NVarChar(100)")]
		public string VIXULY
		{
			get
			{
				return this._VIXULY;
			}
			set
			{
				if ((this._VIXULY != value))
				{
					this.OnVIXULYChanging(value);
					this.SendPropertyChanging();
					this._VIXULY = value;
					this.SendPropertyChanged("VIXULY");
					this.OnVIXULYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHINH", DbType="NVarChar(100)")]
		public string MANHINH
		{
			get
			{
				return this._MANHINH;
			}
			set
			{
				if ((this._MANHINH != value))
				{
					this.OnMANHINHChanging(value);
					this.SendPropertyChanging();
					this._MANHINH = value;
					this.SendPropertyChanged("MANHINH");
					this.OnMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAM", DbType="NVarChar(50)")]
		public string RAM
		{
			get
			{
				return this._RAM;
			}
			set
			{
				if ((this._RAM != value))
				{
					this.OnRAMChanging(value);
					this.SendPropertyChanging();
					this._RAM = value;
					this.SendPropertyChanged("RAM");
					this.OnRAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARDDOHOA", DbType="NVarChar(50)")]
		public string CARDDOHOA
		{
			get
			{
				return this._CARDDOHOA;
			}
			set
			{
				if ((this._CARDDOHOA != value))
				{
					this.OnCARDDOHOAChanging(value);
					this.SendPropertyChanging();
					this._CARDDOHOA = value;
					this.SendPropertyChanged("CARDDOHOA");
					this.OnCARDDOHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUUTRU", DbType="NVarChar(50)")]
		public string LUUTRU
		{
			get
			{
				return this._LUUTRU;
			}
			set
			{
				if ((this._LUUTRU != value))
				{
					this.OnLUUTRUChanging(value);
					this.SendPropertyChanging();
					this._LUUTRU = value;
					this.SendPropertyChanged("LUUTRU");
					this.OnLUUTRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIN", DbType="NVarChar(50)")]
		public string PIN
		{
			get
			{
				return this._PIN;
			}
			set
			{
				if ((this._PIN != value))
				{
					this.OnPINChanging(value);
					this.SendPropertyChanging();
					this._PIN = value;
					this.SendPropertyChanged("PIN");
					this.OnPINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KETNOI", DbType="NVarChar(50)")]
		public string KETNOI
		{
			get
			{
				return this._KETNOI;
			}
			set
			{
				if ((this._KETNOI != value))
				{
					this.OnKETNOIChanging(value);
					this.SendPropertyChanging();
					this._KETNOI = value;
					this.SendPropertyChanged("KETNOI");
					this.OnKETNOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRONGLUONG", DbType="NVarChar(20)")]
		public string TRONGLUONG
		{
			get
			{
				return this._TRONGLUONG;
			}
			set
			{
				if ((this._TRONGLUONG != value))
				{
					this.OnTRONGLUONGChanging(value);
					this.SendPropertyChanging();
					this._TRONGLUONG = value;
					this.SendPropertyChanged("TRONGLUONG");
					this.OnTRONGLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HEDIEUHANH", DbType="NVarChar(20)")]
		public string HEDIEUHANH
		{
			get
			{
				return this._HEDIEUHANH;
			}
			set
			{
				if ((this._HEDIEUHANH != value))
				{
					this.OnHEDIEUHANHChanging(value);
					this.SendPropertyChanging();
					this._HEDIEUHANH = value;
					this.SendPropertyChanged("HEDIEUHANH");
					this.OnHEDIEUHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAUSAC", DbType="NVarChar(20)")]
		public string MAUSAC
		{
			get
			{
				return this._MAUSAC;
			}
			set
			{
				if ((this._MAUSAC != value))
				{
					this.OnMAUSACChanging(value);
					this.SendPropertyChanging();
					this._MAUSAC = value;
					this.SendPropertyChanged("MAUSAC");
					this.OnMAUSACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_THONGTIN", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.THONGTIN1 = null;
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.THONGTIN1 = this;
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUONGHIEU")]
	public partial class THUONGHIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_BRAND;
		
		private string _TENTH;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BRANDChanging(string value);
    partial void OnID_BRANDChanged();
    partial void OnTENTHChanging(string value);
    partial void OnTENTHChanged();
    #endregion
		
		public THUONGHIEU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BRAND", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_BRAND
		{
			get
			{
				return this._ID_BRAND;
			}
			set
			{
				if ((this._ID_BRAND != value))
				{
					this.OnID_BRANDChanging(value);
					this.SendPropertyChanging();
					this._ID_BRAND = value;
					this.SendPropertyChanged("ID_BRAND");
					this.OnID_BRANDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTH", DbType="NVarChar(50)")]
		public string TENTH
		{
			get
			{
				return this._TENTH;
			}
			set
			{
				if ((this._TENTH != value))
				{
					this.OnTENTHChanging(value);
					this.SendPropertyChanging();
					this._TENTH = value;
					this.SendPropertyChanged("TENTH");
					this.OnTENTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_BRAND", OtherKey="ID_BRAND")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINHTRANG")]
	public partial class TINHTRANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_TINHTRANG;
		
		private string _TENTT;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TINHTRANGChanging(string value);
    partial void OnID_TINHTRANGChanged();
    partial void OnTENTTChanging(string value);
    partial void OnTENTTChanged();
    #endregion
		
		public TINHTRANG()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TINHTRANG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_TINHTRANG
		{
			get
			{
				return this._ID_TINHTRANG;
			}
			set
			{
				if ((this._ID_TINHTRANG != value))
				{
					this.OnID_TINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._ID_TINHTRANG = value;
					this.SendPropertyChanged("ID_TINHTRANG");
					this.OnID_TINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTT", DbType="NVarChar(40)")]
		public string TENTT
		{
			get
			{
				return this._TENTT;
			}
			set
			{
				if ((this._TENTT != value))
				{
					this.OnTENTTChanging(value);
					this.SendPropertyChanging();
					this._TENTT = value;
					this.SendPropertyChanged("TENTT");
					this.OnTENTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTRANG_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_TINHTRANG", OtherKey="ID_TINHTRANG")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHGIA")]
	public partial class DANHGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DG;
		
		private string _ID_SP;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGAYGIO;
		
		private string _TIEUDE;
		
		private string _NOIDUNG;
		
		private int _XEPHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DGChanging(string value);
    partial void OnID_DGChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYGIOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIOChanged();
    partial void OnTIEUDEChanging(string value);
    partial void OnTIEUDEChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnXEPHANGChanging(int value);
    partial void OnXEPHANGChanged();
    #endregion
		
		public DANHGIA()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DG
		{
			get
			{
				return this._ID_DG;
			}
			set
			{
				if ((this._ID_DG != value))
				{
					this.OnID_DGChanging(value);
					this.SendPropertyChanging();
					this._ID_DG = value;
					this.SendPropertyChanged("ID_DG");
					this.OnID_DGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIO
		{
			get
			{
				return this._NGAYGIO;
			}
			set
			{
				if ((this._NGAYGIO != value))
				{
					this.OnNGAYGIOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIO = value;
					this.SendPropertyChanged("NGAYGIO");
					this.OnNGAYGIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEUDE", DbType="NVarChar(100)")]
		public string TIEUDE
		{
			get
			{
				return this._TIEUDE;
			}
			set
			{
				if ((this._TIEUDE != value))
				{
					this.OnTIEUDEChanging(value);
					this.SendPropertyChanging();
					this._TIEUDE = value;
					this.SendPropertyChanged("TIEUDE");
					this.OnTIEUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XEPHANG", DbType="Int NOT NULL")]
		public int XEPHANG
		{
			get
			{
				return this._XEPHANG;
			}
			set
			{
				if ((this._XEPHANG != value))
				{
					this.OnXEPHANGChanging(value);
					this.SendPropertyChanging();
					this._XEPHANG = value;
					this.SendPropertyChanged("XEPHANG");
					this.OnXEPHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DANHGIA", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.DANHGIAs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.DANHGIAs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
